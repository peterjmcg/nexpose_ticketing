require_relative './base_mode.rb'

#Update for Tyson: add Management in get_title

class VulnerabilityMode < BaseMode

  # Initializes the mode
  def initialize(options)
    super(options)
  end

  # Returns the fields used to identify individual tickets
  def get_matching_fields
    ['vulnerability_id']
  end

  # Returns the ticket's title
  def get_title(row)
    truncate_title "Vulnerability Management: #{row['title']}"
  end

  # Generates a unique identifier for a ticket
  def get_nxid(nexpose_id, row)
    "#{nexpose_id}v#{row['vulnerability_id']}"
  end

  # Returns the suffix used for query method names
  def get_query_suffix
    '_by_vuln_id'
  end

  # Returns the base ticket description object
  def get_description(nexpose_id, row)
    description = { nxid: "NXID: #{get_nxid(nexpose_id, row)}" }
    fields = ['header', 'references', 'solutions', 'assets']
    fields.each { |f| description[f.intern] = self.send("get_#{f}", row) }
    description
  end

  # Updates the ticket description based on row data
  def update_description(description, row)
    description[:assets] += "\n#{get_assets(row)}"
    description
  end
  
  # Converts the ticket description object into a formatted string
  def print_description(description)
    fields = [:header, :assets, :references, :solutions]
    finalize_description(fields.map { |f| description[f] }.join("\n"),
                         description[:nxid])
  end
end